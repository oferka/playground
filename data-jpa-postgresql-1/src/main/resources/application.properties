spring.application.name=data-jpa-postgres-1
server.port=0

## Profiles:
# default profile is 'default'
# available profiles are:
#   1. for book sample data provider:
#       1.1 book_fixed_sample_data_provider
#       1.2 book_random_sample_data_provider
#   2. for language sample data provider:
#       2.1 language_fixed_sample_data_provider
#       2.2 language_random_sample_data_provider
#   3. for keyword sample data provider:
#       3.1 keyword_fixed_sample_data_provider
#       3.2 keyword_random_sample_data_provider
#spring.profiles.active=book_fixed_sample_data_provider,language_random_sample_data_provider,keyword_fixed_sample_data_provider

## Logging:
logging.level.org.springframework=INFO
logging.level.com.zaxxer=ERROR
logging.level.root=ERROR

# Set to DEBUG to get sql statement generated by hibernate
logging.level.org.hibernate.SQL=ERROR
# Set to TRACE to get parameter values assignment in sql statement generated by hibernate
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR

# Set to DEBUG to get the MockHttpServletRequest and MockHttpServletResponse in integration tests
logging.level.org.springframework.test.web.servlet.result=DEBUG

# Set level to override the default (INFO) defined in the logback-spring.xml
logging.level.com.example=INFO

logging.pattern.console.regexp=%-5level %logger{36} - %msg%n

# Set to true for pretty print of sql statements
spring.jpa.properties.hibernate.format_sql=true

## PostgreSQL:
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=password
# drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create

## Connection pool:
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

